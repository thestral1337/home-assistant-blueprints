blueprint:
  name: Customizable Controller Automation Blueprint for Aqara Switches in Zigbee2MQTT
  description: Customizable Controller Automation Blueprint for Aqara Switches in Zigbee2MQTT
  domain: automation

  input:
    controller:
      name: (Zigbee2MQTT) Controller Name
      description: The name of the switch in Zigbee2MQTT (Not the name of your Home-Assistant Entity)
      default: ""

    #Actions
    single:
      description: Action set to run when the Single button is pressed.
      default: []
      selector:
        action: {}
    double:
      description: Action set to run when the Double button is pressed.
      default: []
      selector:
        action: {}
    hold:
      description: Action set to run when the Hold button is pressed.
      default: []
      selector:
        action: {}
    release:
      description: Action set to run when the Release button is pressed.
      default: []
      selector:
        action: {}
    single_right:
      description: Action set to run when the Single Right button is pressed.
      default: []
      selector:
        action: {}
    double_right:
      description: Action set to run when the Double Right button is pressed.
      default: []
      selector:
        action: {}
    triple_right:
      description: Action set to run when the Triple Right button is pressed.
      default: []
      selector:
        action: {}
    hold_right:
      description: Action set to run when the Hold Right button is pressed.
      default: []
      selector:
        action: {}
    single_left:
      description: Action set to run when the Single Left button is pressed.
      default: []
      selector:
        action: {}
    double_left:
      description: Action set to run when the Double Left button is pressed.
      default: []
      selector:
        action: {}
    triple_left:
      description: Action set to run when the Triple Left button is pressed.
      default: []
      selector:
        action: {}
    hold_left:
      description: Action set to run when the Hold Left button is pressed.
      default: []
      selector:
        action: {}
    single_both:
      description: Action set to run when the Single Both button is pressed.
      default: []
      selector:
        action: {}
    double_both:
      description: Action set to run when the Double Both button is pressed.
      default: []
      selector:
        action: {}
    triple_both:
      description: Action set to run when the Triple Both button is pressed.
      default: []
      selector:
        action: {}
    hold_both:
      description: Action set to run when the Hold Both button is pressed.
      default: []
      selector:
        action: {}

mode: parallel
max: 5
trigger_variables:
  controller: !input controller
trigger:
  - platform: mqtt
    topic: "{{ 'zigbee2mqtt/' ~ controller }}"
condition:
  - "{{ trigger.payload_json.action not in [null, 'unknown', ''] }}"
action:
  - variables:
      controller: !input controller
  - choose:
    - conditions: '{{ trigger.payload_json.action == "single" }}'
      sequence: !input single
    - conditions: '{{ trigger.payload_json.action == "double" }}'
      sequence: !input double
    - conditions: '{{ trigger.payload_json.action == "hold" }}'
      sequence: !input hold
    - conditions: '{{ trigger.payload_json.action == "release" }}'
      sequence: !input release
    - conditions: '{{ trigger.payload_json.action == "single_right" }}'
      sequence: !input single_right
    - conditions: '{{ trigger.payload_json.action == "double_right" }}'
      sequence: !input double_right
    - conditions: '{{ trigger.payload_json.action == "triple_right" }}'
      sequence: !input triple_right
    - conditions: '{{ trigger.payload_json.action == "hold_right" }}'
      sequence: !input hold_right
    - conditions: '{{ trigger.payload_json.action == "single_left" }}'
      sequence: !input single_left
    - conditions: '{{ trigger.payload_json.action == "double_left" }}'
      sequence: !input double_left
    - conditions: '{{ trigger.payload_json.action == "triple_left" }}'
      sequence: !input triple_left
    - conditions: '{{ trigger.payload_json.action == "hold_left" }}'
      sequence: !input hold_left
    - conditions: '{{ trigger.payload_json.action == "single_both" }}'
      sequence: !input single_both
    - conditions: '{{ trigger.payload_json.action == "double_both" }}'
      sequence: !input double_both
    - conditions: '{{ trigger.payload_json.action == "triple_both" }}'
      sequence: !input triple_both
    - conditions: '{{ trigger.payload_json.action == "hold_both" }}'
      sequence: !input hold_both
